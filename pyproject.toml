[project]
name = "scikit-learn"
dynamic = ["version"]
description = "A set of python modules for machine learning and data mining"
readme = "README.rst"
maintainers = [
    {name = "scikit-learn developers", email="scikit-learn@python.org"},
]
dependencies = [
  "numpy>=1.19.5",
  "joblib>=1.2.0",
  "threadpoolctl>=3.1.0",
]
requires-python = ">=3.9"
license = {file = "COPYING"}
classifiers=[
  "Intended Audience :: Science/Research",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: BSD License",
  "Programming Language :: C",
  "Programming Language :: Python",
  "Topic :: Software Development",
  "Topic :: Scientific/Engineering",
  "Development Status :: 5 - Production/Stable",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX",
  "Operating System :: Unix",
  "Operating System :: MacOS",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
]

[project.urls]
homepage = "https://scikit-learn.org"
source = "https://github.com/scikit-learn/scikit-learn"
download = "https://pypi.org/project/scikit-learn/#files"
tracker = "https://github.com/scikit-learn/scikit-learn/issues"
"release notes" = "https://scikit-learn.org/stable/whats_new"

[project.optional-dependencies]
build = ["numpy>=1.19.5", "cython>=3.0.10", "meson-python>=0.16.0"]
install = ["numpy>=1.19.5", "joblib>=1.2.0", "threadpoolctl>=3.1.0"]
benchmark = []
docs = [
]
examples = [
]
tests = [
]
maintenance = []

[build-system]
build-backend = "mesonpy"
# Minimum requirements for the build system to execute.
requires = [
    "meson-python>=0.16.0",
    "Cython>=3.0.10",
    "numpy>=2",
]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311']
preview = true
exclude = '''
/(
    \.eggs         # exclude a few common directories in the
  | \.git          # root of the project
  | \.mypy_cache
  | \.vscode
  | build
  | dist
  | doc/_build
  | doc/auto_examples
  | sklearn/externals
  | asv_benchmarks/env
)/
'''

[tool.ruff]
# max line length for black
line-length = 88
target-version = "py38"
exclude=[
    ".git",
    "__pycache__",
    "dist",
    "sklearn/externals",
    "doc/_build",
    "doc/auto_examples",
    "build",
    "asv_benchmarks/env",
    "asv_benchmarks/html",
    "asv_benchmarks/results",
    "asv_benchmarks/benchmarks/cache",
]

[tool.check-sdist]
# These settings should match .gitattributes
sdist-only = []
git-only = [".*", "build_tools", "maint_tools"]
default-ignore = false

[tool.spin]
package = "sklearn"  # name of your package

[tool.spin.commands]
"Build" = [
  "spin.cmds.pip.install",
  "spin.cmds.meson.test",
  ".spin/cmds.py:clean",
]
"Documentation" = [
  "spin.cmds.meson.docs"
]

[tool.changelog-bot]
    [tool.changelog-bot.towncrier_changelog]
        enabled = true
        verify_pr_number = true
        changelog_noop_label = "No Changelog Needed"
        whatsnew_pattern = 'doc/whatsnew/upcoming_changes/[^/]+/\d+\.[^.]+\.rst'

[tool.towncrier]
    package = "sklearn"
    filename = "doc/whats_new/v1.7.rst"
    single_file = true
    directory = "doc/whats_new/upcoming_changes"
    issue_format = ":pr:`{issue}`"
    template = "doc/whats_new/upcoming_changes/towncrier_template.rst.jinja2"
    all_bullets = false

    [[tool.towncrier.section]]
        name = ":mod:`sklearn.metrics`"
        path = "sklearn.metrics"

    [[tool.towncrier.section]]
        name = ":mod:`sklearn.model_selection`"
        path = "sklearn.model_selection"
